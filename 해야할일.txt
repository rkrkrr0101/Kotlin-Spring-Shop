1.의존성결정(OAuth2 Authorization Server이랑 OAuth2 Resource Server 쓸지말지 결정)
	https://ttl-blog.tistory.com/1434
	
2.시큐리티설정((oauth2,일반로그인)+(액세스,리프레시토큰))
	일반로그인과 oauth2로그인이 둘다 가능해야함
	oauth2로 접근하면 자동으로 회원가입후 로그인이 되어야함
	로그인에 성공하면 액세스토큰과 리프레시토큰을 리턴해야함
	리프레시토큰은 db에 담아둬서 약간의 stateful을 추가하는대신 강제토큰만료가 가능하게함
	
	rest서버 oauth2동작방식
	https://knoc-story.tistory.com/80
	로직
		프론트가 토큰없이 요청하면 410던지고,410받으면 프론트는 로그인페이지로 연결
		프론트가 액세스토큰넣어서 보냈는데 200오면 성공
		프론트가 액세스토큰넣어서 보냈는데 401오면(만료등) 액세스토큰 재발급url로 리프레시토큰 던짐
		프론트가 리프레시토큰 넣어서 재발급받으러 갔는데 성공(200)하면 받은 토큰으로 다시 원래요청 보냄
			이때 액세스토큰과 리프레시토큰 둘다 재발급하자(한무리프레시)
		프론트가 리프레시토큰 넣어서 재발급받으러 갔는데 실패하면(만료등) 만료띄우고 로그인페이지로 연결
		
		상태코드
		토큰없이 요청하면 410
		액세스토큰있는데 만료되었으면 401
		액세스토큰 이상하면 401
		리프레시토큰 만료되면 401
		리프레시토큰 이상하면 401
	액세스토큰은 30분,리프레시는 2주가 국룰인데 테스트해야하니까 1분 3분으로 잡을까
	액세스토큰
		sub(이름,즉 액세스,리프레시구분)
		exp(만료시간)
		id(id)
		role(권한)
	리프레시토큰
		sub(이름,즉 액세스,리프레시구분)
		exp(만료시간)
		id(id)		
		
3.만들거 설계 
	권한 유저 매니저 어드민
		유저:읽기
		매니저:읽기,쓰기