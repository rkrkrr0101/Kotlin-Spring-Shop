1.의존성결정(OAuth2 Authorization Server이랑 OAuth2 Resource Server 쓸지말지 결정)
	https://ttl-blog.tistory.com/1434
	
2.시큐리티설정((oauth2,일반로그인)+(액세스,리프레시토큰))
	일반로그인과 oauth2로그인이 둘다 가능해야함
	oauth2로 접근하면 자동으로 회원가입후 로그인이 되어야함
	로그인에 성공하면 액세스토큰과 리프레시토큰을 리턴해야함
	리프레시토큰은 db에 담아둬서 약간의 stateful을 추가하는대신 강제토큰만료가 가능하게함
	
	rest서버 oauth2동작방식
	https://knoc-story.tistory.com/80
	(https://gilssang97.tistory.com/58)
	https://github.com/SangHyunGil/SpringSecurityJWT-Local-OAuth2-EmailAuth
	https://velog.io/@ch4570/posts?tag=spring-security
	restapi에선 그냥 프론트가 소셜로그인버튼을 누르면 네이버로 가고,
	네이버에서 로그인을 하면 Authorization code를 주는데,이걸 담아서 백엔드에 요청
	백엔드는 그거가지고 네이버에 토큰요청후 토큰발급받음
	만약 대상이 첫로그인이면 회원가입처리후 토큰리턴
	백엔드는 해당프로바이더의 url로 던져주면 알아서 로그인하고 그담에 리다이렉트url에 써둔곳으로 던져줌

	일반로그인필터(액세스리프레시토큰 리턴하는)와
	소셜로그인필터(액세스리프레시토큰 리턴하는) 따로 만들어야하는듯

	
	로직
		프론트가 토큰없이 요청하면 410던지고,410받으면 프론트는 로그인페이지로 연결
		프론트가 액세스토큰넣어서 보냈는데 200오면 성공
		프론트가 액세스토큰넣어서 보냈는데 401오면(만료등) 액세스토큰 재발급url로 리프레시토큰 던짐
		프론트가 리프레시토큰 넣어서 재발급받으러 갔는데 성공(200)하면 받은 토큰으로 다시 원래요청 보냄
			이때 액세스토큰과 리프레시토큰 둘다 재발급하자(한무리프레시)
		프론트가 리프레시토큰 넣어서 재발급받으러 갔는데 실패하면(만료등) 만료띄우고 로그인페이지로 연결
		
		상태코드
		토큰없이 요청하면 410
		액세스토큰있는데 만료되었으면 401
		액세스토큰 이상하면 401
		리프레시토큰 만료되면 401
		리프레시토큰 이상하면 401
	액세스토큰은 30분,리프레시는 2주가 국룰인데 테스트해야하니까 1분 3분으로 잡을까
	액세스토큰
		sub(이름,즉 액세스,리프레시구분)
		exp(만료시간)
		id(id)
		role(권한)
	리프레시토큰
		sub(이름,즉 액세스,리프레시구분)
		exp(만료시간)
		id(id)

	일반회원가입 //완
	일반로그인   //완
	일반토큰전송필터  //완
	소셜로그인(회원가입강제)  //완
	소셜토큰필터  //완
	리프레시 액세스리필 컨트롤러 //대충 만들어뒀으니 서비스로 빼고 수정하자
	jwtUtil 리프레시토큰 db에 기록(단일접속이면 member테이블에,다중접속허용이면 따로테이블 파야할듯)//단일로 완

	일반회원가입 아이디중복체크 //완

    테스트생성
        토큰생성테스트 //완
        토큰읽기테스트 //완
        리프레시토큰재발급테스트 //완
        회원가입테스트 //컨트롤러단 테스트
            중복회원가입방지 테스트 //컨트롤러단 테스트

        로그인시 토큰발급테스트
        소셜로그인시 자동회원가입테스트
        소셜로그인시 토큰발급테스트



3.만들거 설계 
	권한 유저 판매자 어드민
		유저:읽기
		판매자:읽기,쓰기
	판매자는 글을 쓸수있고,업데이트할수있음
	글은 사진,제목,할인전가격,할인후가격,할인율,무료배송,구매수,본문(json이나 text,사진은 텍스트중간에 경로로),쿠폰으로 구성됨
	유저는 상품을 장바구니에 담을수있고,장바구니에서 상품을 삭제할수있음
	
	
	배치로 사용하지않는 리프레시토큰 삭제
	배치로 사용하지않는 이미지 삭제?
	
	
	
	
	
	
	
	